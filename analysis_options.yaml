# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

dart_code_metrics:
  anti-patterns:
    - long-method
    - long-parameter-list
  metrics:
    cyclomatic-complexity: 20
    maximum-nesting-level: 5
    number-of-parameters: 4
    source-lines-of-code: 50
  metrics-exclude:
    - test/**
  rules:
    - newline-before-return
    - no-boolean-literal-compare
    - no-empty-block
    - prefer-trailing-comma
    - prefer-conditional-expressions
    - no-equal-then-else

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    # avoid_print: false  # Uncomment to disable the `avoid_print` rule
    # prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule
    - use_decorated_box
    - use_to_and_as_if_applicable
    - use_setters_to_change_properties
    - use_named_constants
    - use_if_null_to_convert_nulls_to_bools
    - use_is_even_rather_than_modulo
    - unnecessary_this
    - unnecessary_string_interpolations
    - unnecessary_string_escapes
    - unnecessary_parenthesis
    - unnecessary_null_checks
    - sized_box_shrink_expand
    - prefer_null_aware_method_calls
    - prefer_interpolation_to_compose_strings
    - prefer_int_literals
    - prefer_if_elements_to_conditional_expressions
    - prefer_foreach
    - prefer_constructors_over_static_methods
    - only_throw_errors
    - one_member_abstracts
    - missing_whitespace_between_adjacent_strings
    - join_return_with_assignment
    - cascade_invocations
    - avoid_setters_without_getters
    - avoid_multiple_declarations_per_line
    - avoid_classes_with_only_static_members
    - no_logic_in_create_state
    - cancel_subscriptions
    - require_trailing_commas
    - avoid_void_async
# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options

analyzer:
  exclude:
    - "**/*.g.dart"
    - "**/*.freezed.dart"
    - "**/l10n.dart"
    - "**/messages_all.dart"
    - "**/*.config.dart"

  errors:
    invalid_annotation_target: ignore
